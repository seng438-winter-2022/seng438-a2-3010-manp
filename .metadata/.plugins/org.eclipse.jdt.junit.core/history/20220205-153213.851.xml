<?xml version="1.0" encoding="UTF-8"?><testrun name="CreateNumberArray2DTest" project="JFreeChart" tests="3" started="3" failures="1" errors="0" ignored="0">
  <testsuite name="org.jfree.data.test.CreateNumberArray2DTest" time="0.001">
    <testcase name="TestDoubleArrayForMethodCreateNumberArray2D" classname="org.jfree.data.test.CreateNumberArray2DTest" time="0.0"/>
    <testcase name="TestEmptyDoubleArrayForMethodCreateNumberArray2D" classname="org.jfree.data.test.CreateNumberArray2DTest" time="0.001">
      <failure>java.lang.AssertionError: The Number 2D array and the Double 2D array are both empty: array lengths differed, expected.length=1 actual.length=0&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:71)&#13;
	at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:32)&#13;
	at org.junit.Assert.internalArrayEquals(Assert.java:473)&#13;
	at org.junit.Assert.assertArrayEquals(Assert.java:265)&#13;
	at org.jfree.data.test.CreateNumberArray2DTest.TestEmptyDoubleArrayForMethodCreateNumberArray2D(CreateNumberArray2DTest.java:37)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="TestNullForMethodCreateNumberArray2D" classname="org.jfree.data.test.CreateNumberArray2DTest" time="0.0"/>
  </testsuite>
</testrun>
